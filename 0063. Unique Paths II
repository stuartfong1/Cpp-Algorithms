// Dynamic Programming
class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int grid[100][100];
        int n = obstacleGrid.size();
        int m = obstacleGrid[0].size();
        
        for(int row = 0; row < n; ++row)
        {
            for(int col = 0; col < m; ++col)
            {
                if(obstacleGrid[row][col] == 1)
                {
                    grid[row][col] = 0;
                }
                else if(row == 0 && col == 0)
                {
                    grid[row][col] = 1;
                }
                else if(row == 0)
                {
                    if(grid[row][col-1])
                    {
                        grid[0][col] = 1;
                    }
                    else
                    {
                        grid[row][col] = 0;
                    }
                }
                else if(col == 0)
                {
                    if(grid[row-1][col])
                    {
                        grid[row][0] = 1;
                    }
                    else
                    {
                        grid[row][col] = 0;
                    }
                }
                else
                {
                    grid[row][col] = grid[row-1][col] + grid[row][col-1];
                }
            }
        }
        return grid[n-1][m-1];
    }
};
